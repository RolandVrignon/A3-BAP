{
  "_args": [
    [
      {
        "raw": "angular4-files-upload@^1.0.2",
        "scope": null,
        "escapedName": "angular4-files-upload",
        "name": "angular4-files-upload",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "C:\\wamp64\\www\\digital"
    ]
  ],
  "_from": "angular4-files-upload@>=1.0.2 <2.0.0",
  "_id": "angular4-files-upload@1.0.2",
  "_inCache": true,
  "_location": "/angular4-files-upload",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/angular4-files-upload-1.0.2.tgz_1506505710747_0.3312200722284615"
  },
  "_npmUser": {
    "name": "bonjurmrfirst",
    "email": "bonjurmrfirst@gmail.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular4-files-upload@^1.0.2",
    "scope": null,
    "escapedName": "angular4-files-upload",
    "name": "angular4-files-upload",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular4-files-upload/-/angular4-files-upload-1.0.2.tgz",
  "_shasum": "54c9792674c71e843092d0d289abe2d47554f3a3",
  "_shrinkwrap": null,
  "_spec": "angular4-files-upload@^1.0.2",
  "_where": "C:\\wamp64\\www\\digital",
  "author": {
    "name": "Potsepaiev Illia",
    "email": "bonjurmrfirst@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/bonjurmrfirst/ng4-files/issues"
  },
  "dependencies": {
    "@angular/animations": "^4.2.4",
    "@angular/common": "^4.2.4",
    "@angular/compiler": "^4.2.4",
    "@angular/core": "^4.2.4",
    "@angular/forms": "^4.2.4",
    "@angular/http": "^4.2.4",
    "@angular/platform-browser": "^4.2.4",
    "@angular/platform-browser-dynamic": "^4.2.4",
    "@angular/router": "^4.2.4",
    "core-js": "^2.4.1",
    "rxjs": "^5.4.2",
    "zone.js": "^0.8.14"
  },
  "description": "Angular4 files upload by click or/and drag and drop",
  "devDependencies": {
    "@angular/cli": "1.3.0",
    "@angular/compiler-cli": "^4.2.4",
    "@angular/language-service": "^4.2.4",
    "@types/jasmine": "~2.5.53",
    "@types/jasminewd2": "~2.0.2",
    "@types/node": "~6.0.60",
    "codelyzer": "~3.1.1",
    "jasmine-core": "~2.6.2",
    "jasmine-spec-reporter": "~4.1.0",
    "jasmine-ts": "^0.2.1",
    "karma": "~1.7.0",
    "karma-chrome-launcher": "~2.1.1",
    "karma-cli": "~1.0.1",
    "karma-coverage-istanbul-reporter": "^1.2.1",
    "karma-jasmine": "~1.1.0",
    "karma-jasmine-html-reporter": "^0.2.2",
    "protractor": "~5.1.2",
    "ts-node": "~3.2.0",
    "tslint": "~5.3.2",
    "typescript": "~2.3.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-w0ST5hE2rNkmlNdL6GzWjNbb0hv5OhwpE4+yL2JviXxBw1wsvUVRjZa63cHBeTpxggMz0boKQMe8KTNtpjxulg==",
    "shasum": "54c9792674c71e843092d0d289abe2d47554f3a3",
    "tarball": "https://registry.npmjs.org/angular4-files-upload/-/angular4-files-upload-1.0.2.tgz"
  },
  "gitHead": "c67e5b67acd9ca67f043716ad010902804a04a45",
  "homepage": "https://github.com/bonjurmrfirst/ng4-files#readme",
  "keywords": [
    "Angular4",
    "ng4",
    "file",
    "file upload",
    "drop file",
    "drag and drop upload",
    "angular upload"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "bonjurmrfirst",
      "email": "bonjurmrfirst@gmail.com"
    }
  ],
  "name": "angular4-files-upload",
  "optionalDependencies": {},
  "private": false,
  "readme": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n[![npm version](https://badge.fury.io/js/angular4-files-upload.svg)](https://badge.fury.io/js/angular4-files-upload)\r\n[![Build Status](https://travis-ci.org/bonjurmrfirst/ng4-files.svg?branch=master)](https://travis-ci.org/bonjurmrfirst/ng4-files)\r\n\r\n# angular4-files-upload\r\n\r\nUpload files by clicking or dragging\r\n\r\n\r\n## Getting started\r\n\r\n`npm i --save angular4-files-upload`\r\n\r\nAdd following lines into your\r\n\r\n**module:**\r\n\r\n```typescript\r\nimport { Ng4FilesModule } from './ng4-files';\r\n```\r\n\r\nadd Ng4FilesModule to your module imports section<br/>\r\n```typescript\r\nimports: [ Ng4FilesModule ]\r\n```\r\n\r\n<br/>\r\n\r\n**component template:**\r\n\r\nUpload by click:\r\n```html\r\n<ng4-files-click (filesSelect)=\"filesSelect($event)\">\r\n  <span>Click me to upload</span>\r\n</ng4-files-click>\r\n```\r\n\r\nUpload with drag'n'drop:\r\n```html\r\n<ng4-files-drop (filesSelect)=\"filesSelect($event)\">\r\n  <div style=\"display: inline-block; height: 100px; width: 100px; background-color: gray\">\r\n    {{selectedFiles}}\r\n  </div>\r\n</ng4-files-drop>\r\n```\r\n\r\n<br/>\r\n\r\n**component ts:**\r\n \r\n```typescript\r\nimport {\r\n  Ng4FilesStatus,\r\n  Ng4FilesSelected\r\n} from './ng4-files';\r\n \r\n...\r\n \r\npublic selectedFiles;\r\n \r\npublic filesSelect(selectedFiles: Ng4FilesSelected): void {\r\n    if (selectedFiles.status !== Ng4FilesStatus.STATUS_SUCCESS) {\r\n      this.selectedFiles = selectedFiles.status;\r\n      return;\r\n      \r\n      // Hnadle error statuses here\r\n    }\r\n\r\n    this.selectedFiles = Array.from(selectedFiles.files).map(file => file.name);\r\n  }\r\n\r\n```\r\n\r\n##Configure\r\n\r\nTo pass config to angular4-files-upload add following lines to you component.ts file:\r\n\r\n### Shared Config\r\n\r\n```typescript\r\nimport {\r\n  Ng4FilesService,\r\n  Ng4FilesConfig,\r\n} from './ng4-files';\r\n \r\n...\r\n \r\nconstructor(\r\n      private ng4FilesService: Ng4FilesService\r\n  ) {}\r\n \r\nprivate testConfig: Ng4FilesConfig = {\r\n    acceptExtensions: ['js', 'doc', 'mp4'],\r\n    maxFilesCount: 5,\r\n    maxFileSize: 5120000,\r\n    totalFilesSize: 10120000\r\n  };\r\n   \r\nngOnInit() {\r\n    this.ng4FilesService.addConfig(this.testConfig);\r\n}\r\n```\r\n\r\n### Private configs\r\n\r\nConfig added this way <br>\r\n`this.ng4FilesService.addConfig(this.testConfig);`<br>\r\nis shared config. All components will use it.\r\n\r\nBut you can add multiple configs for your upload components.<br>\r\nLet's say, you have two upload components and you want to allow user upload just one video and 5(max) images.<br>\r\nTo do this create 2 configs and pass it to upload components as named configs.\r\n\r\n.ts\r\n\r\n```typescript\r\nimport {\r\n  Ng4FilesService,\r\n  Ng4FilesConfig,\r\n  Ng4FilesStatus,\r\n  Ng4FilesSelected\r\n} from './ng4-files';\r\n \r\n ...\r\n \r\npublic selectedFiles; \r\n \r\nprivate configImage: Ng4FilesConfig = {\r\n    acceptExtensions: ['jpg', 'jpeg'],\r\n    maxFilesCount: 5,\r\n    totalFilesSize: 101200000\r\n  };\r\n  \r\nprivate configVideo: Ng4FilesConfig = {\r\n    acceptExtensions: ['mp4', 'avi'],\r\n    maxFilesCount: 1\r\n  };  \r\n \r\nconstructor(\r\n      private ng4FilesService: Ng4FilesService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.ng4FilesService.addConfig(this.configImage, 'my-image-config');\r\n    this.ng4FilesService.addConfig(this.configVideo, 'my-video-config');\r\n  }\r\n\r\n  public filesSelect(selectedFiles: Ng4FilesSelected): void {\r\n    if (selectedFiles.status !== Ng4FilesStatus.STATUS_SUCCESS) {\r\n      this.selectedFiles = selectedFiles.status;\r\n      return;\r\n    }\r\n \r\n    // Handle error statuses here\r\n \r\n    this.selectedFiles = Array.from(selectedFiles.files).map(file => file.name);\r\n  } \r\n \r\n```\r\n\r\n.html\r\n\r\n```html\r\n<ng4-files-click (filesSelect)=\"filesSelect($event)\" [configId]=\"'my-image-config'\">\r\n  <span>Upload</span>\r\n</ng4-files-click>\r\n \r\n\r\n<ng4-files-drop (filesSelect)=\"filesSelect($event)\" [configId]=\"'my-video-config'\">\r\n  <div style=\"display: inline-block; height: 100px; width: 100px; background-color: gray\">\r\n    {{selectedFiles}}\r\n  </div>\r\n</ng4-files-drop>\r\n```  \r\n  \r\n  \r\n## API\r\n\r\n### Config\r\n\r\n_acceptExtensions_ <br/>\r\nvalues: string[] or \\'\\*\\' <br/>\r\nexamples: ['ts', 'spec.ts'], ['js'], '*'\r\n\r\n_maxFilesCount_: <br/>\r\nvalues: [number] <br/>\r\n\r\n_maxFileSize:_ <br/>\r\nvalues: [number] (bytes)\r\n \r\n_totalFilesSize:_ <br/>\r\nvalues: [number] (bytes)\r\n\r\n### Template\r\n\r\n<ng4-files-click _(filesSelect)_=\"YOUR_HANDLER($event)\" _[configId]_=\"YOUR_CONFIG\">\r\n\r\n_filesSelect_<br> \r\nemit when files attached and pass Ng4FilesSelected object to YOUR_HANDLER:\r\n\r\n```\r\nexport enum Ng4FilesStatus {\r\n    STATUS_SUCCESS,\r\n    STATUS_MAX_FILES_COUNT_EXCEED,\r\n    STATUS_MAX_FILE_SIZE_EXCEED,\r\n    STATUS_MAX_FILES_TOTAL_SIZE_EXCEED,\r\n    STATUS_NOT_MATCH_EXTENSIONS\r\n}\r\n\r\nexport interface Ng4FilesSelected {\r\n  status: Ng4FilesStatus;\r\n  files: File[];\r\n}\r\n```\r\n\r\n_! Note on statuses STATUS_MAX_FILE_SIZE_EXCEED or STATUS_NOT_MATCH_EXTENSIONS you get files not passed validation, so you shouldn't filter it manually to find all invalid files._\r\n\r\n_configId_<br>\r\nPass your named config with configId\r\n<br>\r\n\r\n## Caveat\r\nPlease don't use button tag in template inside ng4-files-click<br>\r\nDon't: ```html\r\n<ng4-files-click>\r\n    <button></button>\r\n</ng4-files-click>```\r\n<br><br>\r\nng4-files-click content is wrapped in label tag, so prefer something like\r\n````html\r\n<ng4-files-click>\r\n    <span role=\"button\" style=\"btn\">Give me file ^.^</button>\r\n</ng4-files-click>```\r\n````\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bonjurmrfirst/ng4-files.git"
  },
  "scripts": {
    "build": "ng build",
    "build:prod": "ng build --prod",
    "e2e": "ng e2e",
    "lint": "ng lint",
    "ng": "ng",
    "start": "ng serve",
    "tdd": "nodemon -e ts -w ./src -x jasmine-ts JASMINE_CONFIG_PATH=./jasmine.tdd.json  --fast=true",
    "test": "nodemon -e ts -w ./src -x jasmine-ts JASMINE_CONFIG_PATH=./jasmine.tdd.json  --fast=true",
    "test:node": "jasmine-ts JASMINE_CONFIG_PATH=./jasmine.tdd.json --fast=true",
    "verify": "npm run lint && npm run test:node && npm run build && npm run build:prod"
  },
  "version": "1.0.2"
}
