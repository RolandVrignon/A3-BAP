{
  "_args": [
    [
      {
        "raw": "url-value-parser@^1.0.0",
        "scope": null,
        "escapedName": "url-value-parser",
        "name": "url-value-parser",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "C:\\wamp64\\www\\digital\\node_modules\\express-prom-bundle"
    ]
  ],
  "_from": "url-value-parser@>=1.0.0 <2.0.0",
  "_id": "url-value-parser@1.0.0",
  "_inCache": true,
  "_location": "/url-value-parser",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/url-value-parser-1.0.0.tgz_1480186862589_0.6394031282979995"
  },
  "_npmUser": {
    "name": "disjunction",
    "email": "or@pluseq.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "url-value-parser@^1.0.0",
    "scope": null,
    "escapedName": "url-value-parser",
    "name": "url-value-parser",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/express-prom-bundle"
  ],
  "_resolved": "https://registry.npmjs.org/url-value-parser/-/url-value-parser-1.0.0.tgz",
  "_shasum": "f909af662f47ad16e4f6a508ea579a695305f0d3",
  "_shrinkwrap": null,
  "_spec": "url-value-parser@^1.0.0",
  "_where": "C:\\wamp64\\www\\digital\\node_modules\\express-prom-bundle",
  "author": {
    "name": "Konstantin Pogorelov",
    "email": "or@pluseq.com"
  },
  "bugs": {
    "url": "https://github.com/disjunction/url-value-parser/issues"
  },
  "dependencies": {},
  "description": "extracts and replaces values and IDs in URLs",
  "devDependencies": {
    "coveralls": "^2.11.11",
    "eslint": "^3.0.1",
    "istanbul": "^0.4.4",
    "jasme": "^5.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "f909af662f47ad16e4f6a508ea579a695305f0d3",
    "tarball": "https://registry.npmjs.org/url-value-parser/-/url-value-parser-1.0.0.tgz"
  },
  "gitHead": "25a3383fb09cea1ba7e553da3f0cabd41da0ae3c",
  "homepage": "https://github.com/disjunction/url-value-parser#readme",
  "keywords": [
    "url",
    "parse",
    "replace",
    "id"
  ],
  "license": "WTFPL",
  "main": "src/UrlValueParser.js",
  "maintainers": [
    {
      "name": "disjunction",
      "email": "or@pluseq.com"
    }
  ],
  "name": "url-value-parser",
  "optionalDependencies": {},
  "readme": "[![build status](https://api.travis-ci.org/disjunction/url-value-parser.png)](https://travis-ci.org/disjunction/url-value-parser)\n[![Coverage Status](https://coveralls.io/repos/github/disjunction/url-value-parser/badge.svg?branch=master&bust=1)](https://coveralls.io/github/disjunction/url-value-parser?branch=master)\n\n# UrlValueParser\n\nA helper ES6 class letting you extract values from URL paths,\nleaving the other parts untouched.\n\nIt uses an internal class `ValueDetector` determining\nwhat is a value and what is not. By default the following\npath chunks are considered values:\n\n* decimal numbers\n* strings in UUID format\n* hex numbers consisting of 7 or more characters\n  and consistent lower or upper case\n\nYou can customize all of the logic by providing options,\noverriding methods or providing your own value detector.\nSee the source - it's easy, i promise.\n\n## Usage\n\n```javascript\nconst UrlValueParser = require('url-value-parser');\nconst parser = new UrlValueParser(/* {options} */);\n\nparser.parsePathValues('/some/path/154/userId/ABC363AFE2');\n/*\n here the values would be 154 and ABC363AFE2\n thus it returns:\n\n  {\n    chunks: ['some', 'path', '154', 'userId', 'ABC363AFE2'],\n    valueIndexes: [2, 5]\n  }\n*/\n\nparser.replacePathValues('/some/path/154/userId/ABC363AFE2', '#id');\n// returns: /some/path/#id/userId/#id\n```\n\nFor options, see the source\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/disjunction/url-value-parser.git"
  },
  "scripts": {
    "test": "./node_modules/jasme/run.js"
  },
  "version": "1.0.0"
}
